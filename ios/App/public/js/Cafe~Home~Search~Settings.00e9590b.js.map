{"version":3,"sources":["webpack:///./node_modules/@capacitor/core/dist/index.js","webpack:///./node_modules/@capacitor/push-notifications/dist/esm/index.js","webpack:///./node_modules/@capacitor/local-notifications/dist/esm/index.js","webpack:///./src/composables/useFCM.js","webpack:///./node_modules/localforage/dist/localforage.js","webpack:///./node_modules/@ionic/storage/dist/esm/index.js","webpack:///./src/services/StorageService.js"],"names":["createCapacitorPlatforms","win","defaultPlatformMap","Map","set","name","capPlatforms","CapacitorPlatforms","currentPlatform","platforms","addPlatform","platform","setPlatform","has","get","initPlatforms","globalThis","self","window","global","ExceptionCode","CapacitorException","Error","message","code","super","this","getPlatformId","_a","_b","androidBridge","webkit","messageHandlers","bridge","createCapacitor","_c","_d","_e","cap","Capacitor","Plugins","defaultGetPlatform","getPlatform","defaultIsNativePlatform","isNativePlatform","defaultIsPluginAvailable","pluginName","plugin","registeredPlugins","getPluginHeader","isPluginAvailable","defaultGetPluginHeader","PluginHeaders","find","h","handleError","err","console","error","pluginMethodNoop","_target","prop","Promise","reject","defaultRegisterPlugin","jsImplementations","registeredPlugin","warn","proxy","pluginHeader","jsImplementation","loadPluginImplementation","async","createPluginMethod","impl","bind","Unimplemented","methodHeader","methods","m","rtype","options","nativePromise","toString","callback","nativeCallback","createPluginMethodWrapper","remove","wrapper","args","p","then","fn","Object","defineProperty","value","writable","configurable","addListener","removeListener","addListenerNative","eventName","call","callbackId","resolve","Proxy","_","Set","keys","registerPlugin","convertFileSrc","filePath","Exception","DEBUG","isLoggingEnabled","isNative","initCapacitorGlobal","WebPlugin","config","listeners","windowListeners","listenerFunc","push","windowListener","registered","addWindowListener","listener","removeWindowListener","data","forEach","length","windowEventName","pluginEventName","handler","event","notifyListeners","msg","Unavailable","index","indexOf","splice","handle","addEventListener","removeEventListener","PushNotifications","LocalNotifications","web","LocalNotificationsWeb","useFCM","userId","router","useRouter","useStorage","initPush","response","registerPush","catch","alert","requestPermission","permission","granted","register","token","payload","fcm_token","AuthService","setFcmToken","JSON","stringify","notification","schedule","notifications","id","cafeId","title","body","autoCancel","f","module","exports","e","t","n","r","s","o","u","a","require","i","l","1","_dereq_","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","immediate","task","2","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","getThen","obj","apply","arguments","thenable","onError","onSuccess","tryToUnwrap","result","tryCatch","status","out","reason","all","iterable","prototype","values","Array","resolved","allResolver","resolveFromAll","outValue","race","constructor","3","4","_typeof","Symbol","iterator","_classCallCheck","instance","Constructor","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","isIndexedDBValid","open","isSafari","openDatabase","test","navigator","userAgent","hasFetch","fetch","IDBKeyRange","createBlob","parts","properties","Blob","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","type","Promise$1","executeCallback","executeTwoCallbacks","errorCallback","normalizeKey","key","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupportWithoutCaching","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","_getConnection","upgradeNeeded","createDbContext","db","close","dbArgs","version","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","target","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","arrayBuff","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","forage","createTransaction","mode","retries","undefined","tx","_initStorage","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","getItem","store","req","iterate","openCursor","iterationNumber","cursor","setItem","blobSupport","removeItem","clear","count","advanced","openKeyCursor","advance","dropInstance","currentConfig","isCurrentDb","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","_forage","asyncStorage","_driver","_support","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","buffer","bytes","bufferToString","base64String","substring","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","createDbTable","executeSql","_initStorage$1","dbInfoPromise","description","size","serializer","tryExecuteSql","sqlStatement","SYNTAX_ERR","results","rows","getItem$1","item","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","c","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","operations","webSQLStorage","isLocalStorageValid","localStorage","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","isNaN","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","isRequired","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js","Drivers","SecureStorage","IndexedDB","LocalStorage","dbKey","driverOrder","_db","_secureStorageDriver","actualConfig","assign","assertDb","iteratorCallback","setEncryptionKey","storage","Storage","create"],"mappings":"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","file":"js/Cafe~Home~Search~Settings.00e9590b.js","sourcesContent":["/*! Capacitor: https://capacitorjs.com/ - MIT License */\nconst createCapacitorPlatforms = (win) => {\n    const defaultPlatformMap = new Map();\n    defaultPlatformMap.set('web', { name: 'web' });\n    const capPlatforms = win.CapacitorPlatforms || {\n        currentPlatform: { name: 'web' },\n        platforms: defaultPlatformMap,\n    };\n    const addPlatform = (name, platform) => {\n        capPlatforms.platforms.set(name, platform);\n    };\n    const setPlatform = (name) => {\n        if (capPlatforms.platforms.has(name)) {\n            capPlatforms.currentPlatform = capPlatforms.platforms.get(name);\n        }\n    };\n    capPlatforms.addPlatform = addPlatform;\n    capPlatforms.setPlatform = setPlatform;\n    return capPlatforms;\n};\nconst initPlatforms = (win) => (win.CapacitorPlatforms = createCapacitorPlatforms(win));\nconst CapacitorPlatforms = /*#__PURE__*/ initPlatforms((typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {}));\nconst addPlatform = CapacitorPlatforms.addPlatform;\nconst setPlatform = CapacitorPlatforms.setPlatform;\n\nconst legacyRegisterWebPlugin = (cap, webPlugin) => {\n    var _a;\n    const config = webPlugin.config;\n    const Plugins = cap.Plugins;\n    if (!config || !config.name) {\n        // TODO: add link to upgrade guide\n        throw new Error(`Capacitor WebPlugin is using the deprecated \"registerWebPlugin()\" function, but without the config. Please use \"registerPlugin()\" instead to register this web plugin.\"`);\n    }\n    // TODO: add link to upgrade guide\n    console.warn(`Capacitor plugin \"${config.name}\" is using the deprecated \"registerWebPlugin()\" function`);\n    if (!Plugins[config.name] || ((_a = config === null || config === void 0 ? void 0 : config.platforms) === null || _a === void 0 ? void 0 : _a.includes(cap.getPlatform()))) {\n        // Add the web plugin into the plugins registry if there already isn't\n        // an existing one. If it doesn't already exist, that means\n        // there's no existing native implementation for it.\n        // - OR -\n        // If we already have a plugin registered (meaning it was defined in the native layer),\n        // then we should only overwrite it if the corresponding web plugin activates on\n        // a certain platform. For example: Geolocation uses the WebPlugin on Android but not iOS\n        Plugins[config.name] = webPlugin;\n    }\n};\n\nvar ExceptionCode;\n(function (ExceptionCode) {\n    /**\n     * API is not implemented.\n     *\n     * This usually means the API can't be used because it is not implemented for\n     * the current platform.\n     */\n    ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n    /**\n     * API is not available.\n     *\n     * This means the API can't be used right now because:\n     *   - it is currently missing a prerequisite, such as network connectivity\n     *   - it requires a particular platform or browser version\n     */\n    ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\nclass CapacitorException extends Error {\n    constructor(message, code) {\n        super(message);\n        this.message = message;\n        this.code = code;\n    }\n}\nconst getPlatformId = (win) => {\n    var _a, _b;\n    if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n        return 'android';\n    }\n    else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n        return 'ios';\n    }\n    else {\n        return 'web';\n    }\n};\n\nconst createCapacitor = (win) => {\n    var _a, _b, _c, _d, _e;\n    const cap = win.Capacitor || {};\n    const Plugins = (cap.Plugins = cap.Plugins || {});\n    const capPlatforms = win.CapacitorPlatforms;\n    const defaultGetPlatform = () => getPlatformId(win);\n    const getPlatform = ((_a = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _a === void 0 ? void 0 : _a.getPlatform) || defaultGetPlatform;\n    const defaultIsNativePlatform = () => getPlatformId(win) !== 'web';\n    const isNativePlatform = ((_b = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _b === void 0 ? void 0 : _b.isNativePlatform) || defaultIsNativePlatform;\n    const defaultIsPluginAvailable = (pluginName) => {\n        const plugin = registeredPlugins.get(pluginName);\n        if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {\n            // JS implementation available for the current platform.\n            return true;\n        }\n        if (getPluginHeader(pluginName)) {\n            // Native implementation available.\n            return true;\n        }\n        return false;\n    };\n    const isPluginAvailable = ((_c = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _c === void 0 ? void 0 : _c.isPluginAvailable) ||\n        defaultIsPluginAvailable;\n    const defaultGetPluginHeader = (pluginName) => { var _a; return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find(h => h.name === pluginName); };\n    const getPluginHeader = ((_d = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _d === void 0 ? void 0 : _d.getPluginHeader) || defaultGetPluginHeader;\n    const handleError = (err) => win.console.error(err);\n    const pluginMethodNoop = (_target, prop, pluginName) => {\n        return Promise.reject(`${pluginName} does not have an implementation of \"${prop}\".`);\n    };\n    const registeredPlugins = new Map();\n    const defaultRegisterPlugin = (pluginName, jsImplementations = {}) => {\n        const registeredPlugin = registeredPlugins.get(pluginName);\n        if (registeredPlugin) {\n            console.warn(`Capacitor plugin \"${pluginName}\" already registered. Cannot register plugins twice.`);\n            return registeredPlugin.proxy;\n        }\n        const platform = getPlatform();\n        const pluginHeader = getPluginHeader(pluginName);\n        let jsImplementation;\n        const loadPluginImplementation = async () => {\n            if (!jsImplementation && platform in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations[platform] === 'function'\n                        ? (jsImplementation = await jsImplementations[platform]())\n                        : (jsImplementation = jsImplementations[platform]);\n            }\n            return jsImplementation;\n        };\n        const createPluginMethod = (impl, prop) => {\n            var _a, _b;\n            if (pluginHeader) {\n                const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find(m => prop === m.name);\n                if (methodHeader) {\n                    if (methodHeader.rtype === 'promise') {\n                        return (options) => cap.nativePromise(pluginName, prop.toString(), options);\n                    }\n                    else {\n                        return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);\n                    }\n                }\n                else if (impl) {\n                    return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);\n                }\n            }\n            else if (impl) {\n                return (_b = impl[prop]) === null || _b === void 0 ? void 0 : _b.bind(impl);\n            }\n            else {\n                throw new CapacitorException(`\"${pluginName}\" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n            }\n        };\n        const createPluginMethodWrapper = (prop) => {\n            let remove;\n            const wrapper = (...args) => {\n                const p = loadPluginImplementation().then(impl => {\n                    const fn = createPluginMethod(impl, prop);\n                    if (fn) {\n                        const p = fn(...args);\n                        remove = p === null || p === void 0 ? void 0 : p.remove;\n                        return p;\n                    }\n                    else {\n                        throw new CapacitorException(`\"${pluginName}.${prop}()\" is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n                    }\n                });\n                if (prop === 'addListener') {\n                    p.remove = async () => remove();\n                }\n                return p;\n            };\n            // Some flair ✨\n            wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;\n            Object.defineProperty(wrapper, 'name', {\n                value: prop,\n                writable: false,\n                configurable: false,\n            });\n            return wrapper;\n        };\n        const addListener = createPluginMethodWrapper('addListener');\n        const removeListener = createPluginMethodWrapper('removeListener');\n        const addListenerNative = (eventName, callback) => {\n            const call = addListener({ eventName }, callback);\n            const remove = async () => {\n                const callbackId = await call;\n                removeListener({\n                    eventName,\n                    callbackId,\n                }, callback);\n            };\n            const p = new Promise(resolve => call.then(() => resolve({ remove })));\n            p.remove = async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            };\n            return p;\n        };\n        const proxy = new Proxy({}, {\n            get(_, prop) {\n                switch (prop) {\n                    // https://github.com/facebook/react/issues/20030\n                    case '$$typeof':\n                        return undefined;\n                    case 'addListener':\n                        return pluginHeader ? addListenerNative : addListener;\n                    case 'removeListener':\n                        return removeListener;\n                    default:\n                        return createPluginMethodWrapper(prop);\n                }\n            },\n        });\n        Plugins[pluginName] = proxy;\n        registeredPlugins.set(pluginName, {\n            name: pluginName,\n            proxy,\n            platforms: new Set([\n                ...Object.keys(jsImplementations),\n                ...(pluginHeader ? [platform] : []),\n            ]),\n        });\n        return proxy;\n    };\n    const registerPlugin = ((_e = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _e === void 0 ? void 0 : _e.registerPlugin) || defaultRegisterPlugin;\n    // Add in convertFileSrc for web, it will already be available in native context\n    if (!cap.convertFileSrc) {\n        cap.convertFileSrc = filePath => filePath;\n    }\n    cap.getPlatform = getPlatform;\n    cap.handleError = handleError;\n    cap.isNativePlatform = isNativePlatform;\n    cap.isPluginAvailable = isPluginAvailable;\n    cap.pluginMethodNoop = pluginMethodNoop;\n    cap.registerPlugin = registerPlugin;\n    cap.Exception = CapacitorException;\n    cap.DEBUG = !!cap.DEBUG;\n    cap.isLoggingEnabled = !!cap.isLoggingEnabled;\n    // Deprecated props\n    cap.platform = cap.getPlatform();\n    cap.isNative = cap.isNativePlatform();\n    return cap;\n};\nconst initCapacitorGlobal = (win) => (win.Capacitor = createCapacitor(win));\n\nconst Capacitor = /*#__PURE__*/ initCapacitorGlobal(typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {});\nconst registerPlugin = Capacitor.registerPlugin;\n/**\n * @deprecated Provided for backwards compatibility for Capacitor v2 plugins.\n * Capacitor v3 plugins should import the plugin directly. This \"Plugins\"\n * export is deprecated in v3, and will be removed in v4.\n */\nconst Plugins = Capacitor.Plugins;\n/**\n * Provided for backwards compatibility. Use the registerPlugin() API\n * instead, and provide the web plugin as the \"web\" implmenetation.\n * For example\n *\n * export const Example = registerPlugin('Example', {\n *   web: () => import('./web').then(m => new m.Example())\n * })\n *\n * @deprecated Deprecated in v3, will be removed from v4.\n */\nconst registerWebPlugin = (plugin) => legacyRegisterWebPlugin(Capacitor, plugin);\n\n/**\n * Base class web plugins should extend.\n */\nclass WebPlugin {\n    constructor(config) {\n        this.listeners = {};\n        this.windowListeners = {};\n        if (config) {\n            // TODO: add link to upgrade guide\n            console.warn(`Capacitor WebPlugin \"${config.name}\" config object was deprecated in v3 and will be removed in v4.`);\n            this.config = config;\n        }\n    }\n    addListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            this.listeners[eventName] = [];\n        }\n        this.listeners[eventName].push(listenerFunc);\n        // If we haven't added a window listener for this event and it requires one,\n        // go ahead and add it\n        const windowListener = this.windowListeners[eventName];\n        if (windowListener && !windowListener.registered) {\n            this.addWindowListener(windowListener);\n        }\n        const remove = async () => this.removeListener(eventName, listenerFunc);\n        const p = Promise.resolve({ remove });\n        Object.defineProperty(p, 'remove', {\n            value: async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            },\n        });\n        return p;\n    }\n    async removeAllListeners() {\n        this.listeners = {};\n        for (const listener in this.windowListeners) {\n            this.removeWindowListener(this.windowListeners[listener]);\n        }\n        this.windowListeners = {};\n    }\n    notifyListeners(eventName, data) {\n        const listeners = this.listeners[eventName];\n        if (listeners) {\n            listeners.forEach(listener => listener(data));\n        }\n    }\n    hasListeners(eventName) {\n        return !!this.listeners[eventName].length;\n    }\n    registerWindowListener(windowEventName, pluginEventName) {\n        this.windowListeners[pluginEventName] = {\n            registered: false,\n            windowEventName,\n            pluginEventName,\n            handler: event => {\n                this.notifyListeners(pluginEventName, event);\n            },\n        };\n    }\n    unimplemented(msg = 'not implemented') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);\n    }\n    unavailable(msg = 'not available') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unavailable);\n    }\n    async removeListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            return;\n        }\n        const index = listeners.indexOf(listenerFunc);\n        this.listeners[eventName].splice(index, 1);\n        // If there are no more listeners for this type of event,\n        // remove the window listener\n        if (!this.listeners[eventName].length) {\n            this.removeWindowListener(this.windowListeners[eventName]);\n        }\n    }\n    addWindowListener(handle) {\n        window.addEventListener(handle.windowEventName, handle.handler);\n        handle.registered = true;\n    }\n    removeWindowListener(handle) {\n        if (!handle) {\n            return;\n        }\n        window.removeEventListener(handle.windowEventName, handle.handler);\n        handle.registered = false;\n    }\n}\n\nconst WebView = /*#__PURE__*/ registerPlugin('WebView');\n\nexport { Capacitor, CapacitorException, CapacitorPlatforms, ExceptionCode, Plugins, WebPlugin, WebView, addPlatform, registerPlugin, registerWebPlugin, setPlatform };\n//# sourceMappingURL=index.js.map\n","import { registerPlugin } from '@capacitor/core';\nconst PushNotifications = registerPlugin('PushNotifications', {});\nexport * from './definitions';\nexport { PushNotifications };\n//# sourceMappingURL=index.js.map","import { registerPlugin } from '@capacitor/core';\nconst LocalNotifications = registerPlugin('LocalNotifications', {\n    web: () => import('./web').then(m => new m.LocalNotificationsWeb()),\n});\nexport * from './definitions';\nexport { LocalNotifications };\n//# sourceMappingURL=index.js.map","import { useRouter } from 'vue-router';\r\n\r\nimport { Capacitor } from '@capacitor/core';\r\n\r\nimport { PushNotifications } from '@capacitor/push-notifications';\r\nimport { LocalNotifications } from '@capacitor/local-notifications';\r\n\r\nimport AuthService from '../services/AuthService';\r\n\r\nimport { useStorage } from '@/services/StorageService';\r\n\r\nexport function useFCM(userId) {\r\n    /* Global properties */\r\n    const router = useRouter();\r\n\r\n    //Initializing storage and destructuring getter\r\n    const { get } = useStorage();\r\n\r\n    /* Methods */\r\n    const initPush = () => {\r\n        get(`areNotificationsOn.${userId}`)\r\n            .then((response) => {\r\n                if(Capacitor.getPlatform() !== 'web' && !!response) {\r\n                    registerPush();\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                alert(error);\r\n            });\r\n\r\n    };\r\n    const registerPush = () => {\r\n        /* If permission is not granted asks for permission, after granted it registers Push Notifications */\r\n        PushNotifications.requestPermission()\r\n                         .then((permission) => {\r\n                             if(permission.granted) {\r\n                                 PushNotifications.register();\r\n                             }else {\r\n                                 alert('No permission for push notifications granted');\r\n                             }\r\n                         });\r\n\r\n        /* Event listeners */\r\n        PushNotifications.addListener(\r\n            'registration',\r\n            (token) => {\r\n                const payload = {\r\n                    fcm_token: token.value,\r\n                };\r\n                /* Saving token from FCM into user table */\r\n                AuthService.setFcmToken(payload).then().catch((error) => {\r\n                    alert(error);\r\n                });\r\n            },\r\n        );\r\n        PushNotifications.addListener(\r\n            'registrationError',\r\n            (error) => {\r\n                alert('Error on registration: ' + JSON.stringify(error));\r\n            },\r\n        );\r\n        PushNotifications.addListener(\r\n            'pushNotificationReceived',\r\n            (notification) => {\r\n                LocalNotifications.schedule({\r\n                    notifications: [\r\n                        {\r\n                            id: notification.data.cafeId,\r\n                            title: notification.title,\r\n                            body: notification.body,\r\n                            autoCancel: true,\r\n                        },\r\n                    ],\r\n                });\r\n            },\r\n        );\r\n        PushNotifications.addListener(\r\n            'pushNotificationActionPerformed',\r\n            () => {\r\n                router.push({\r\n                    name: 'cafes',\r\n                });\r\n            },\r\n        );\r\n        LocalNotifications.addListener(\r\n            'localNotificationActionPerformed',\r\n            () => {\r\n                router.push({\r\n                    name: 'cafes',\r\n                });\r\n            },\r\n        );\r\n    };\r\n\r\n    return {\r\n        /* Methods */\r\n        initPush,\r\n        registerPush,\r\n    };\r\n}\r\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.9.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","import LocalForage from 'localforage';\n/** @hidden */\nexport const Drivers = {\n    SecureStorage: 'ionicSecureStorage',\n    IndexedDB: LocalForage.INDEXEDDB,\n    LocalStorage: LocalForage.LOCALSTORAGE\n};\nconst defaultConfig = {\n    name: '_ionicstorage',\n    storeName: '_ionickv',\n    dbKey: '_ionickey',\n    driverOrder: [\n        Drivers.SecureStorage,\n        Drivers.IndexedDB,\n        Drivers.LocalStorage\n    ]\n};\nexport class Storage {\n    /**\n     * Create a new Storage instance using the order of drivers and any additional config\n     * options to pass to LocalForage.\n     *\n     * Possible default driverOrder options are: ['indexeddb', 'localstorage'] and the\n     * default is that exact ordering.\n     *\n     * When using Ionic Secure Storage (enterprise only), use ['ionicSecureStorage', 'indexeddb', 'localstorage'] to ensure\n     * Secure Storage is used when available, or fall back to IndexedDB or LocalStorage on the web.\n     */\n    constructor(config = defaultConfig) {\n        this._db = null;\n        this._secureStorageDriver = null;\n        const actualConfig = Object.assign({}, defaultConfig, config || {});\n        this._config = actualConfig;\n    }\n    async create() {\n        const db = LocalForage.createInstance(this._config);\n        this._db = db;\n        await db.setDriver(this._config.driverOrder || []);\n        return this;\n    }\n    /**\n     * Define a new Driver. Must be called before\n     * initializing the database. Example:\n     *\n     * await storage.defineDriver(myDriver);\n     * await storage.create();\n     */\n    async defineDriver(driver) {\n        if (driver._driver === Drivers.SecureStorage) {\n            this._secureStorageDriver = driver;\n        }\n        return LocalForage.defineDriver(driver);\n    }\n    /**\n     * Get the name of the driver being used.\n     * @returns Name of the driver\n     */\n    get driver() {\n        var _a;\n        return ((_a = this._db) === null || _a === void 0 ? void 0 : _a.driver()) || null;\n    }\n    assertDb() {\n        if (!this._db) {\n            throw new Error('Database not created. Must call create() first');\n        }\n        return this._db;\n    }\n    /**\n     * Get the value associated with the given key.\n     * @param key the key to identify this value\n     * @returns Returns a promise with the value of the given key\n     */\n    get(key) {\n        const db = this.assertDb();\n        return db.getItem(key);\n    }\n    /**\n     * Set the value for the given key.\n     * @param key the key to identify this value\n     * @param value the value for this key\n     * @returns Returns a promise that resolves when the key and value are set\n     */\n    set(key, value) {\n        const db = this.assertDb();\n        return db.setItem(key, value);\n    }\n    /**\n     * Remove any value associated with this key.\n     * @param key the key to identify this value\n     * @returns Returns a promise that resolves when the value is removed\n     */\n    remove(key) {\n        const db = this.assertDb();\n        return db.removeItem(key);\n    }\n    /**\n     * Clear the entire key value store. WARNING: HOT!\n     * @returns Returns a promise that resolves when the store is cleared\n     */\n    clear() {\n        const db = this.assertDb();\n        return db.clear();\n    }\n    /**\n     * @returns Returns a promise that resolves with the number of keys stored.\n     */\n    length() {\n        const db = this.assertDb();\n        return db.length();\n    }\n    /**\n     * @returns Returns a promise that resolves with the keys in the store.\n     */\n    keys() {\n        const db = this.assertDb();\n        return db.keys();\n    }\n    /**\n     * Iterate through each key,value pair.\n     * @param iteratorCallback a callback of the form (value, key, iterationNumber)\n     * @returns Returns a promise that resolves when the iteration has finished.\n     */\n    forEach(iteratorCallback) {\n        const db = this.assertDb();\n        return db.iterate(iteratorCallback);\n    }\n    setEncryptionKey(key) {\n        var _a;\n        if (this.driver !== 'ionicSecureStorage') {\n            throw new Error('@ionic-enterprise/secure-storage not installed. Encryption support not available');\n        }\n        else {\n            (_a = this._secureStorageDriver) === null || _a === void 0 ? void 0 : _a.setEncryptionKey(key);\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import { Storage } from '@ionic/storage';\r\n\r\nexport function useStorage() {\r\n\r\n    const storage = new Storage();\r\n\r\n    storage.create()\r\n           .catch((error) => {\r\n               alert(error)\r\n           });\r\n\r\n    const set = (key, value) => {\r\n        storage?.set(key, value);\r\n    };\r\n\r\n    const get = async(key) => {\r\n        return storage?.get(key);\r\n    };\r\n\r\n\r\n    return {\r\n        set,\r\n        get,\r\n    };\r\n}\r\n"],"sourceRoot":""}