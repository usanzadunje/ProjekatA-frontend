{"version":3,"sources":["webpack:///./node_modules/@capacitor-community/facebook-login/dist/esm/web.js"],"names":["FacebookLoginWeb","super","name","platforms","options","console","log","Promise","resolve","reject","FB","login","response","debug","status","accessToken","token","authResponse","scope","permissions","join","logout","getLoginStatus","result","applicationId","undefined","declinedPermissions","expires","isExpired","lastRefresh","userId","userID","fields","api","error","message"],"mappings":"kHAAA,wEACO,MAAMA,UAAyB,OAClC,cACIC,MAAM,CACFC,KAAM,gBACNC,UAAW,CAAC,SAGpB,YAAYC,GAER,OADAC,QAAQC,IAAI,yBAA0BF,GAC/B,IAAIG,QAAQ,CAACC,EAASC,KACzBC,GAAGC,MAAMC,IACLP,QAAQQ,MAAM,WAAYD,GACF,cAApBA,EAASE,OACTN,EAAQ,CACJO,YAAa,CACTC,MAAOJ,EAASK,aAAaF,eAKrCN,EAAO,CACHM,YAAa,CACTC,MAAO,SAIpB,CAAEE,MAAOd,EAAQe,YAAYC,KAAK,SAG7C,eACI,OAAO,IAAIb,QAAQC,IACfE,GAAGW,OAAO,IAAMb,OAGxB,8BACI,OAAO,IAAID,QAAQ,CAACC,EAASC,KACzBC,GAAGY,eAAeV,IACd,GAAwB,cAApBA,EAASE,OAAwB,CACjC,MAAMS,EAAS,CACXR,YAAa,CACTS,mBAAeC,EACfC,oBAAqB,GACrBC,aAASF,EACTG,eAAWH,EACXI,iBAAaJ,EACbN,YAAa,GACbH,MAAOJ,EAASK,aAAaF,YAC7Be,OAAQlB,EAASK,aAAac,SAGtCvB,EAAQe,QAGRd,EAAO,CACHM,YAAa,CACTC,MAAO,YAO/B,iBAAiBZ,GACb,MAAM4B,EAAS5B,EAAQ4B,OAAOZ,KAAK,KACnC,OAAO,IAAIb,QAAQ,CAACC,EAASC,KACzBC,GAAGuB,IAAI,MAAO,CAAED,UAAUpB,IAClBA,EAASsB,MACTzB,EAAOG,EAASsB,MAAMC,SAG1B3B,EAAQI","file":"js/chunk-2d0c45c6.a16f343b.js","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class FacebookLoginWeb extends WebPlugin {\n    constructor() {\n        super({\n            name: 'FacebookLogin',\n            platforms: ['web'],\n        });\n    }\n    async login(options) {\n        console.log('FacebookLoginWeb.login', options);\n        return new Promise((resolve, reject) => {\n            FB.login(response => {\n                console.debug('FB.login', response);\n                if (response.status === 'connected') {\n                    resolve({\n                        accessToken: {\n                            token: response.authResponse.accessToken,\n                        },\n                    });\n                }\n                else {\n                    reject({\n                        accessToken: {\n                            token: null,\n                        },\n                    });\n                }\n            }, { scope: options.permissions.join(',') });\n        });\n    }\n    async logout() {\n        return new Promise(resolve => {\n            FB.logout(() => resolve());\n        });\n    }\n    async getCurrentAccessToken() {\n        return new Promise((resolve, reject) => {\n            FB.getLoginStatus(response => {\n                if (response.status === 'connected') {\n                    const result = {\n                        accessToken: {\n                            applicationId: undefined,\n                            declinedPermissions: [],\n                            expires: undefined,\n                            isExpired: undefined,\n                            lastRefresh: undefined,\n                            permissions: [],\n                            token: response.authResponse.accessToken,\n                            userId: response.authResponse.userID,\n                        },\n                    };\n                    resolve(result);\n                }\n                else {\n                    reject({\n                        accessToken: {\n                            token: null,\n                        },\n                    });\n                }\n            });\n        });\n    }\n    async getProfile(options) {\n        const fields = options.fields.join(',');\n        return new Promise((resolve, reject) => {\n            FB.api('/me', { fields }, response => {\n                if (response.error) {\n                    reject(response.error.message);\n                    return;\n                }\n                resolve(response);\n            });\n        });\n    }\n}\n//# sourceMappingURL=web.js.map"],"sourceRoot":""}